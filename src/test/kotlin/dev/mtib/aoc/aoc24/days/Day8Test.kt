package dev.mtib.aoc.aoc24.days

import io.kotest.core.spec.style.FunSpec
import io.kotest.matchers.shouldBe

class Day8Test : FunSpec({
    val snippet0 = """
        ............
        ........0...
        .....0......
        .......0....
        ....0.......
        ......A.....
        ............
        ............
        ........A...
        .........A..
        ............
        ............
    """.trimIndent()
    val snippet1 = """
        ..........
        ...#......
        ..........
        ....a.....
        ..........
        .....a....
        ..........
        ......#...
        ..........
        ..........
    """.trimIndent()
    val snippet2 = """
        ..........
        ...#......
        #.........
        ....a.....
        ........a.
        .....a....
        ..#.......
        ......#...
        ..........
        ..........
    """.trimIndent()
    val snippet3 = """
        ..........
        ...#......
        #.........
        ....a.....
        ........a.
        .....a....
        ..#.......
        ......A...
        ..........
        ..........
    """.trimIndent()
    val snippet4 = """
        ......#....#
        ...#....0...
        ....#0....#.
        ..#....0....
        ....0....#..
        .#....A.....
        ...#........
        #......#....
        ........A...
        .........A..
        ..........#.
        ..........#.
    """.trimIndent()
    context("part1") {
        test("doesn't throw") {
            try {
                Day8.part1()
            } catch (e: NotImplementedError) {
                // Ignore allowed exception
            }
        }
        test("example0") {
                Day8.withInput(snippet0) {
                    Day8.part1() shouldBe 14
                }
        }
    }
    context("part2") {
        test("doesn't throw") {
            try {
                Day8.part2()
            } catch (e: NotImplementedError) {
                // Ignore allowed exception
            }
        }
    }
})
